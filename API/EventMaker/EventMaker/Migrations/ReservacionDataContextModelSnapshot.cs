// <auto-generated />
using System;
using EventMaker.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventMaker.Migrations
{
    [DbContext(typeof(ReservacionDataContext))]
    partial class ReservacionDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EventMaker.Modelos.CategoriaEvento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoria_evento");

                    b.Property<string>("icono");

                    b.HasKey("id");

                    b.ToTable("categoriaEventos");
                });

            modelBuilder.Entity("EventMaker.Modelos.Evento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("categoriaEventoid");

                    b.Property<string>("clave");

                    b.Property<DateTime>("fecha");

                    b.Property<int>("invitadoid");

                    b.Property<string>("lugar");

                    b.Property<string>("nombre_evento");

                    b.Property<decimal>("precio");

                    b.Property<int>("reservacionid");

                    b.HasKey("id");

                    b.HasIndex("categoriaEventoid");

                    b.HasIndex("invitadoid");

                    b.HasIndex("reservacionid");

                    b.ToTable("eventos");
                });

            modelBuilder.Entity("EventMaker.Modelos.Invitado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido_invitado");

                    b.Property<string>("descripcion");

                    b.Property<string>("nombre_invitado");

                    b.Property<string>("url_image");

                    b.HasKey("id");

                    b.ToTable("invitados");
                });

            modelBuilder.Entity("EventMaker.Modelos.Reservacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("usuarioid");

                    b.HasKey("id");

                    b.HasIndex("usuarioid");

                    b.ToTable("reservacions");
                });

            modelBuilder.Entity("EventMaker.Modelos.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido_usuario");

                    b.Property<string>("correo_electronico");

                    b.Property<int>("edad");

                    b.Property<DateTime>("fecha_Registro");

                    b.Property<string>("nombre_usuario");

                    b.Property<string>("pases_articulos");

                    b.Property<string>("talleres_registrados");

                    b.HasKey("id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("EventMaker.Modelos.Evento", b =>
                {
                    b.HasOne("EventMaker.Modelos.CategoriaEvento", "categoriaEvento")
                        .WithMany("eventos")
                        .HasForeignKey("categoriaEventoid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EventMaker.Modelos.Invitado", "invitado")
                        .WithMany()
                        .HasForeignKey("invitadoid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EventMaker.Modelos.Reservacion", "reservacion")
                        .WithMany("eventos")
                        .HasForeignKey("reservacionid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EventMaker.Modelos.Reservacion", b =>
                {
                    b.HasOne("EventMaker.Modelos.Usuario", "usuario")
                        .WithMany("reservacions")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
